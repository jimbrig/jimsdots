# ------------------------------------------------------------
# shiny
# ------------------------------------------------------------
snippet shinyapp
	library(shiny)

	ui <- fluidPage(
	  ${0}
	)

	server <- function(input, output, session) {

	}

	shinyApp(ui, server)

snippet shinymod
	${1:name}UI <- function(id) {
	  ns <- NS(id)
	  tagList(
	    ${0}
	  )
	}

	${1:name} <- function(input, output, session, ...) {
	  ns <- session\$ns
	}

snippet shinymoduser
	${1:name}UI <- function(id) {
	  ns <- NS(id)
	  tagList(
	    ${0}
	  )
	}

	${1:name} <- function(id, ...) {
	  callModule(${1:name}_module, id, ...)
	}

	${1:name}_module <- function(input, output, session, ...) {
	  ns <- session\$ns
	  # server side module code...
	}

snippet shinycallmod
	${3:value} <- callModule(${1:module}, "${2:id}")

snippet htmldep
	htmltools::htmlDependency(
	  name = "${1:name}",
	  version = "${2:1.2.3}",
	  package = "${3:pkg}",
	  src = "${4:src}",
	  script = "${5:script.js}",
	  stylesheet = "${0:styles.css}",
	  all_files = FALSE
	)

snippet htmltl
	htmltools::tagList(
	  $0
	)

snippet shinypanels
	headerPanel("${1:header}")

	sidebarLayout(
		sidebarPanel(
		  ${2:sidebarUI}
		)

		mainPanel(
		  $0
		)
	)

snippet thead
	tags\$head($0)

snippet tcss
	tags\$link(href = "$0", rel = "stylesheet")

snippet tstyle
	tags\$style($0)

snippet tscript
	tags\$script($0)

snippet tjs
	tags\$script(src = "$0")

snippet ta
	tags\$a(href = "${1:url}", $0)

snippet tbutton
	tags\$button(type="button", title="${1:title}", $0)

snippet tclass
	class = "$0"

snippet tid
	id = "$0"

snippet tdata
	`data-${1:name}` = ${0}

snippet shinycss
	includeCSS("$0")

snippet shinyjs
	includeScript("$0")

snippet shinymsg
	session\$sendCustomMessage("${1:handlerName}", ${2:data})

snippet shinyinputmsg
	session\$sendInputMessage("${1:inputId}", ${2:data})

snippet shinyregisterInputHandler
	shiny::registerInputHandler(
	  type = "${1:input_type}",
	  fun = function(value, session, inputName) {
	    # value is the parsed JSON value returned by the input
	    # transform it as needed and return the new value
	    $0
	  }
	)